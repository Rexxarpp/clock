C51 COMPILER V9.60.0.0   HC595                                                             12/16/2020 21:49:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HC595
OBJECT MODULE PLACED IN .\Objects\hc595.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE hc595.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\hc5
                    -95.lst) OBJECT(.\Objects\hc595.obj)

line level    source

   1          #include "hc595.h"
   2          
   3          
   4          
   5          void hc_595_init()
   6          {
   7   1              HC595_SH_CLK = 0;
   8   1              HC595_ST_CLK = 0;
   9   1              
  10   1              HC595_SH_CLK_L = 0;
  11   1              HC595_ST_CLK_L = 0;
  12   1              
  13   1              HC595_SH_CLK_R = 0;
  14   1              HC595_ST_CLK_R = 0;
  15   1      }
  16          
  17          //将移位寄存器中的数据存入存储寄存器以显示
  18          void hc_595_stor_data()
  19          {
  20   1              HC595_ST_CLK = 1;
  21   1              HC595_ST_CLK = 0;
  22   1      }
  23          
  24          void hc_595_stor_data_L()
  25          {       
  26   1              HC595_ST_CLK_L = 1;
  27   1              HC595_ST_CLK_L = 0;
  28   1      }
  29          
  30          void hc_595_stor_data_R()
  31          {       
  32   1              HC595_ST_CLK_R = 1;
  33   1              HC595_ST_CLK_R = 0;
  34   1      }
  35          
  36          //向移位寄存器中写入1字节，不显示
  37          
  38          void hc_595_write_byte(unsigned char dat)
  39          {
  40   1              HC595_DS = dat & 0x80;
  41   1              HC595_SH_CLK = 0;
  42   1              HC595_SH_CLK = 1;
  43   1              
  44   1              HC595_DS = dat & 0x40;
  45   1              HC595_SH_CLK = 0;
  46   1              HC595_SH_CLK = 1;
  47   1              
  48   1              HC595_DS = dat & 0x20;
  49   1              HC595_SH_CLK = 0;
  50   1              HC595_SH_CLK = 1;
  51   1              
  52   1              HC595_DS = dat & 0x10;
  53   1              HC595_SH_CLK = 0;
  54   1              HC595_SH_CLK = 1;
C51 COMPILER V9.60.0.0   HC595                                                             12/16/2020 21:49:36 PAGE 2   

  55   1              
  56   1              HC595_DS = dat & 0x08;
  57   1              HC595_SH_CLK = 0;
  58   1              HC595_SH_CLK = 1;
  59   1              
  60   1              HC595_DS = dat & 0x04;
  61   1              HC595_SH_CLK = 0;
  62   1              HC595_SH_CLK = 1;
  63   1              
  64   1              HC595_DS = dat & 0x02;
  65   1              HC595_SH_CLK = 0;
  66   1              HC595_SH_CLK = 1;
  67   1              
  68   1              HC595_DS = dat & 0x01;
  69   1              HC595_SH_CLK = 0;
  70   1              HC595_SH_CLK = 1;
  71   1      }
  72          
  73          void hc_595_write_byte_L(unsigned char dat)
  74          {
  75   1              HC595_DS_L = dat & 0x80;
  76   1              HC595_SH_CLK_L = 0;
  77   1              HC595_SH_CLK_L = 1;
  78   1              
  79   1              HC595_DS_L = dat & 0x40;
  80   1              HC595_SH_CLK_L = 0;
  81   1              HC595_SH_CLK_L = 1;
  82   1              
  83   1              HC595_DS_L = dat & 0x20;
  84   1              HC595_SH_CLK_L = 0;
  85   1              HC595_SH_CLK_L = 1;
  86   1              
  87   1              HC595_DS_L = dat & 0x10;
  88   1              HC595_SH_CLK_L = 0;
  89   1              HC595_SH_CLK_L = 1;
  90   1              
  91   1              HC595_DS_L = dat & 0x08;
  92   1              HC595_SH_CLK_L = 0;
  93   1              HC595_SH_CLK_L = 1;
  94   1              
  95   1              HC595_DS_L = dat & 0x04;
  96   1              HC595_SH_CLK_L = 0;
  97   1              HC595_SH_CLK_L = 1;
  98   1              
  99   1              HC595_DS_L = dat & 0x02;
 100   1              HC595_SH_CLK_L = 0;
 101   1              HC595_SH_CLK_L = 1;
 102   1              
 103   1              HC595_DS_L = dat & 0x01;
 104   1              HC595_SH_CLK_L = 0;
 105   1              HC595_SH_CLK_L = 1;
 106   1      }
 107          
 108          void hc_595_write_byte_R(unsigned char dat)
 109          {
 110   1              HC595_DS_R = dat & 0x80;
 111   1              HC595_SH_CLK_R = 0;
 112   1              HC595_SH_CLK_R = 1;
 113   1              
 114   1              HC595_DS_R = dat & 0x40;
 115   1              HC595_SH_CLK_R = 0;
 116   1              HC595_SH_CLK_R = 1;
C51 COMPILER V9.60.0.0   HC595                                                             12/16/2020 21:49:36 PAGE 3   

 117   1              
 118   1              HC595_DS_R = dat & 0x20;
 119   1              HC595_SH_CLK_R = 0;
 120   1              HC595_SH_CLK_R = 1;
 121   1              
 122   1              HC595_DS_R = dat & 0x10;
 123   1              HC595_SH_CLK_R = 0;
 124   1              HC595_SH_CLK_R = 1;
 125   1              
 126   1              HC595_DS_R = dat & 0x08;
 127   1              HC595_SH_CLK_R = 0;
 128   1              HC595_SH_CLK_R = 1;
 129   1              
 130   1              HC595_DS_R = dat & 0x04;
 131   1              HC595_SH_CLK_R = 0;
 132   1              HC595_SH_CLK_R = 1;
 133   1              
 134   1              HC595_DS_R = dat & 0x02;
 135   1              HC595_SH_CLK_R = 0;
 136   1              HC595_SH_CLK_R = 1;
 137   1              
 138   1              HC595_DS_R = dat & 0x01;
 139   1              HC595_SH_CLK_R = 0;
 140   1              HC595_SH_CLK_R = 1;
 141   1      }
 142          
 143          
 144          //void hc_595_write_byte(unsigned char dat)
 145          //{
 146          //      char i; //此处不能用unsigned char 否则循环不能停止。巨坑！！！！
 147          //      for(i = 7; i >= 0; i--)
 148          //      {
 149          //              HC595_DS = (dat >> i) & 0x01;
 150          //              HC595_SH_CLK = 0;
 151          //              HC595_SH_CLK = 1;               
 152          //      }
 153          //      
 154          ////    视频中其他人的方法
 155          ////    for(i = 0; i < 8; i++)
 156          ////    {
 157          ////            if(dat < 0x80)
 158          ////            {
 159          ////                    HC595_DS = 0;
 160          ////            }
 161          ////            else
 162          ////            {
 163          ////                    HC595_DS = 1;
 164          ////            }
 165          ////            HC595_SH_CLK = 1;
 166          ////            HC595_SH_CLK = 0;
 167          ////            
 168          ////            dat <<= 1;
 169          ////            
 170          ////    }
 171          
 172          //}
 173          
 174          //向移位寄存器中写入2字节，并显示
 175          void hc_595_write_two_byte(unsigned char dat_h, unsigned char dat_l)
 176          {
 177   1              hc_595_write_byte(dat_h);
 178   1              hc_595_write_byte(dat_l);
C51 COMPILER V9.60.0.0   HC595                                                             12/16/2020 21:49:36 PAGE 4   

 179   1              hc_595_stor_data();
 180   1      }
 181          
 182          void hc_595_write_two_byte_L(unsigned char dat_h, unsigned char dat_l)
 183          {
 184   1              hc_595_write_byte_L(dat_h);
 185   1              hc_595_write_byte_L(dat_l);
 186   1              hc_595_stor_data_L();
 187   1      }
 188          
 189          void hc_595_write_two_byte_R(unsigned char dat_h, unsigned char dat_l)
 190          {
 191   1              hc_595_write_byte_R(dat_h);
 192   1              hc_595_write_byte_R(dat_l);
 193   1              hc_595_stor_data_R();
 194   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    262    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
